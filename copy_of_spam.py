# -*- coding: utf-8 -*-
"""Copy of spam.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I1i4lDkWoLiemC6g12DNlNKE3NFf6I5w
"""

import pandas as pd
import numpy as np

df = pd.read_csv("/content/spam.csv")
df.head()

df.Category.value_counts()

#Applying the classes to the data
df['spam'] = df['Category'].apply(lambda x: 1 if x =='spam' else 0)
df.head()

#Train-Test split
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(df.Message, df.spam, test_size=0.2)

print(X_train.shape)
print(X_test.shape)

#Creating Bag of Words representation
from sklearn.feature_extraction.text import CountVectorizer

v = CountVectorizer()

X_train_cv = v.fit_transform(X_train.values)
X_train_cv

#Training the Naive-Baye's Model
from sklearn.naive_bayes import MultinomialNB

model = MultinomialNB()
model.fit(X_train_cv, y_train)

X_test_cv = v.transform(X_test)

#Model performance and evaluation
from sklearn.metrics import classification_report
y_pred = model.predict(X_test_cv)
print(classification_report(y_test, y_pred))

#Custom Prediction Model
emails = [
    'Hey mohan, can we get together to watch footbal game tomorrow?',
    'Upto 20% discount on parking, exclusive offer just for you. Dont miss this reward!'
]
emails_count = v.transform(emails)
model.predict(emails_count)